{"version":3,"file":"py-editor-Dnbv5U4x.js","sources":["../src/plugins/py-editor.js"],"sourcesContent":["// PyScript py-editor plugin\nimport withResolvers from \"@webreflection/utils/with-resolvers\";\nimport { Hook, XWorker, dedent, defineProperties } from \"polyscript/exports\";\nimport { TYPES, offline_interpreter, relative_url, stdlib } from \"../core.js\";\nimport { notify } from \"./error.js\";\nimport codemirror from \"./codemirror.js\";\n\nconst RUN_BUTTON = `<svg style=\"height:24px;width:24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19,12a1,1,0,0,1-.55.89l-10,5A1,1,0,0,1,8,18a1,1,0,0,1-.53-.15A1,1,0,0,1,7,17V7a1,1,0,0,1,1.45-.89l10,5A1,1,0,0,1,19,12Z\" fill=\"#464646\"/></svg>`;\nconst STOP_BUTTON = `<svg style=\"height:24px;width:24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7 7h10v10H7z\" style=\"fill:#464646;stroke:#464646;stroke-width:1;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;paint-order:normal\"/></svg>`;\n\nlet id = 0;\nconst getID = (type) => `${type}-editor-${id++}`;\n\nconst envs = new Map();\nconst configs = new Map();\nconst editors = new WeakMap();\n\nconst hooks = {\n    worker: {\n        codeBeforeRun: () => stdlib,\n        // works on both Pyodide and MicroPython\n        onReady: ({ runAsync, io }, { sync }) => {\n            io.stdout = io.buffered(sync.write);\n            io.stderr = io.buffered(sync.writeErr);\n            sync.revoke();\n            sync.runAsync = runAsync;\n        },\n    },\n};\n\nconst validate = (config, result) => {\n    if (typeof result === \"boolean\") throw `Invalid source: ${config}`;\n    return result;\n};\n\nconst getRelatedScript = (target, type) => {\n    const editor = target.closest(`.${type}-editor-box`);\n    return editor?.parentNode?.previousElementSibling;\n};\n\nasync function execute({ currentTarget, script }) {\n    const { env, pySrc, outDiv } = this;\n    const hasRunButton = !!currentTarget;\n\n    if (hasRunButton) {\n        currentTarget.classList.add(\"running\");\n        currentTarget.innerHTML = STOP_BUTTON;\n        outDiv.innerHTML = \"\";\n    }\n\n    if (!envs.has(env)) {\n        const srcLink = URL.createObjectURL(new Blob([\"\"]));\n        const details = {\n            type: this.interpreter,\n            serviceWorker: this.serviceWorker,\n        };\n        const { config } = this;\n        if (config) {\n            // verify that config can be parsed and used\n            try {\n                details.configURL = relative_url(config);\n                if (config.endsWith(\".toml\")) {\n                    const [{ parse }, toml] = await Promise.all([\n                        import(\n                            /* webpackIgnore: true */ \"../3rd-party/toml.js\"\n                        ),\n                        fetch(config).then((r) => r.ok && r.text()),\n                    ]);\n                    details.config = parse(validate(config, toml));\n                } else if (config.endsWith(\".json\")) {\n                    const json = await fetch(config).then(\n                        (r) => r.ok && r.json(),\n                    );\n                    details.config = validate(config, json);\n                } else {\n                    details.configURL = relative_url(\"./config.txt\");\n                    details.config = JSON.parse(config);\n                }\n                details.version = offline_interpreter(details.config);\n            } catch (error) {\n                notify(error);\n                return;\n            }\n        } else {\n            details.config = {};\n        }\n\n        const xworker = XWorker.call(new Hook(null, hooks), srcLink, details);\n\n        // expose xworker like in terminal or other workers to allow\n        // creation and destruction of editors on the fly\n        if (hasRunButton) {\n            for (const type of TYPES.keys()) {\n                script = getRelatedScript(currentTarget, type);\n                if (script) break;\n            }\n        }\n\n        defineProperties(script, { xworker: { value: xworker } });\n\n        const { sync } = xworker;\n        const { promise, resolve } = withResolvers();\n        envs.set(env, promise);\n        sync.revoke = () => {\n            URL.revokeObjectURL(srcLink);\n            resolve(xworker);\n        };\n    }\n\n    // wait for the env then set the target div\n    // before executing the current code\n    return envs.get(env).then((xworker) => {\n        xworker.onerror = ({ error }) => {\n            if (hasRunButton) {\n                outDiv.insertAdjacentHTML(\n                    \"beforeend\",\n                    `<span style='color:red'>${\n                        error.message || error\n                    }</span>\\n`,\n                );\n            }\n            console.error(error);\n        };\n\n        const enable = () => {\n            if (hasRunButton) {\n                currentTarget.classList.remove(\"running\");\n                currentTarget.innerHTML = RUN_BUTTON;\n                const { previousElementSibling } =\n                    currentTarget.closest(\"[data-env]\").parentElement;\n                previousElementSibling?.dispatchEvent(\n                    new Event(\"py-editor:done\", {\n                        bubbles: true,\n                        cancelable: true,\n                    }),\n                );\n            }\n        };\n        const { sync } = xworker;\n        sync.write = (str) => {\n            if (hasRunButton) outDiv.innerText += `${str}\\n`;\n            else console.log(str);\n        };\n        sync.writeErr = (str) => {\n            if (hasRunButton) {\n                outDiv.insertAdjacentHTML(\n                    \"beforeend\",\n                    `<span style='color:red'>${str}</span>\\n`,\n                );\n            } else {\n                notify(str);\n                console.error(str);\n            }\n        };\n        sync.runAsync(pySrc).then(enable, enable);\n    });\n}\n\nconst replaceScript = (script, type) => {\n    script.xworker?.terminate();\n    const clone = script.cloneNode(true);\n    clone.type = `${type}-editor`;\n    const editor = editors.get(script);\n    if (editor) {\n        const content = editor.state.doc.toString();\n        clone.textContent = content;\n        editors.delete(script);\n        script.nextElementSibling.remove();\n    }\n    script.replaceWith(clone);\n};\n\nconst makeRunButton = (handler, type) => {\n    const runButton = document.createElement(\"button\");\n    runButton.className = `absolute ${type}-editor-run-button`;\n    runButton.innerHTML = RUN_BUTTON;\n    runButton.setAttribute(\"aria-label\", \"Python Script Run Button\");\n    runButton.addEventListener(\"click\", async (event) => {\n        if (\n            runButton.classList.contains(\"running\") &&\n            confirm(\"Stop evaluating this code?\")\n        ) {\n            const script = getRelatedScript(runButton, type);\n            if (script) {\n                const env = script.getAttribute(\"env\");\n                // remove the bootstrapped env which could be one or shared\n                if (env) {\n                    for (const [key, value] of TYPES) {\n                        if (key === type) {\n                            configs.delete(`${value}-${env}`);\n                            envs.delete(`${value}-${env}`);\n                            break;\n                        }\n                    }\n                }\n                // lonley script without setup node should be replaced\n                if (script.xworker) replaceScript(script, type);\n                // all scripts sharing the same env should be replaced\n                else {\n                    const sel = `script[type^=\"${type}-editor\"][env=\"${env}\"]`;\n                    for (const script of document.querySelectorAll(sel))\n                        replaceScript(script, type);\n                }\n            }\n            return;\n        }\n        runButton.blur();\n        await handler.handleEvent(event);\n    });\n    return runButton;\n};\n\nconst makeEditorDiv = (handler, type) => {\n    const editorDiv = document.createElement(\"div\");\n    editorDiv.className = `${type}-editor-input`;\n    editorDiv.setAttribute(\"aria-label\", \"Python Script Area\");\n\n    const runButton = makeRunButton(handler, type);\n    const editorShadowContainer = document.createElement(\"div\");\n\n    // avoid outer elements intercepting key events (reveal as example)\n    editorShadowContainer.addEventListener(\"keydown\", (event) => {\n        event.stopPropagation();\n    });\n\n    editorDiv.append(runButton, editorShadowContainer);\n\n    return editorDiv;\n};\n\nconst makeOutDiv = (type) => {\n    const outDiv = document.createElement(\"div\");\n    outDiv.className = `${type}-editor-output`;\n    outDiv.id = `${getID(type)}-output`;\n    return outDiv;\n};\n\nconst makeBoxDiv = (handler, type) => {\n    const boxDiv = document.createElement(\"div\");\n    boxDiv.className = `${type}-editor-box`;\n\n    const editorDiv = makeEditorDiv(handler, type);\n    const outDiv = makeOutDiv(type);\n    boxDiv.append(editorDiv, outDiv);\n\n    return [boxDiv, outDiv, editorDiv.querySelector(\"button\")];\n};\n\nconst init = async (script, type, interpreter) => {\n    const [\n        { basicSetup, EditorView },\n        { Compartment },\n        { python },\n        { indentUnit },\n        { keymap },\n        { defaultKeymap, indentWithTab },\n    ] = await Promise.all([\n        codemirror.core,\n        codemirror.state,\n        codemirror.python,\n        codemirror.language,\n        codemirror.view,\n        codemirror.commands,\n    ]);\n\n    let isSetup = script.hasAttribute(\"setup\");\n    const hasConfig = script.hasAttribute(\"config\");\n    const serviceWorker = script.getAttribute(\"service-worker\");\n    const env = `${interpreter}-${script.getAttribute(\"env\") || getID(type)}`;\n\n    // helps preventing too lazy ServiceWorker initialization on button run\n    if (serviceWorker) {\n        new XWorker(\"data:application/javascript,postMessage(0)\", {\n            type: \"dummy\",\n            serviceWorker,\n        }).onmessage = ({ target }) => target.terminate();\n    }\n\n    if (hasConfig && configs.has(env)) {\n        throw new SyntaxError(\n            configs.get(env)\n                ? `duplicated config for env: ${env}`\n                : `unable to add a config to the env: ${env}`,\n        );\n    }\n\n    configs.set(env, hasConfig);\n\n    let source = script.textContent;\n\n    // verify the src points to a valid file that can be parsed\n    const { src } = script;\n    if (src) {\n        try {\n            source = validate(\n                src,\n                await fetch(src).then((b) => b.ok && b.text()),\n            );\n        } catch (error) {\n            notify(error);\n            return;\n        }\n    }\n\n    const context = {\n        // allow the listener to be overridden at distance\n        handleEvent: execute,\n        serviceWorker,\n        interpreter,\n        env,\n        config: hasConfig && script.getAttribute(\"config\"),\n        get pySrc() {\n            return isSetup ? source : editor.state.doc.toString();\n        },\n        get outDiv() {\n            return isSetup ? null : outDiv;\n        },\n    };\n\n    let target;\n    defineProperties(script, {\n        target: { get: () => target },\n        handleEvent: {\n            get: () => context.handleEvent,\n            set: (callback) => {\n                // do not bother with logic if it was set back as its original handler\n                if (callback === execute) context.handleEvent = execute;\n                // in every other case be sure that if the listener override returned\n                // `false` nothing happens, otherwise keep doing what it always did\n                else {\n                    context.handleEvent = async (event) => {\n                        // trap the currentTarget ASAP (if any)\n                        // otherwise it gets lost asynchronously\n                        const { currentTarget } = event;\n                        // augment a code snapshot before invoking the override\n                        defineProperties(event, {\n                            code: { value: context.pySrc },\n                        });\n                        // avoid executing the default handler if the override returned `false`\n                        if ((await callback(event)) !== false)\n                            await execute.call(context, { currentTarget });\n                    };\n                }\n            },\n        },\n        code: {\n            get: () => context.pySrc,\n            set: (insert) => {\n                if (isSetup) return;\n                editor.update([\n                    editor.state.update({\n                        changes: {\n                            from: 0,\n                            to: editor.state.doc.length,\n                            insert,\n                        },\n                    }),\n                ]);\n            },\n        },\n        process: {\n            /**\n             * Simulate a setup node overriding the source to evaluate.\n             * @param {string} code the Python code to evaluate.\n             * @param {boolean} asRunButtonAction invoke the `Run` button handler.\n             * @returns {Promise<...>} fulfill once code has been evaluated.\n             */\n            value(code, asRunButtonAction = false) {\n                if (asRunButtonAction) return listener();\n                const wasSetup = isSetup;\n                const wasSource = source;\n                isSetup = true;\n                source = code;\n                const restore = () => {\n                    isSetup = wasSetup;\n                    source = wasSource;\n                };\n                return context\n                    .handleEvent({ currentTarget: null })\n                    .then(restore, restore);\n            },\n        },\n    });\n\n    const notifyEditor = () => {\n        const event = new Event(`${type}-editor`, { bubbles: true });\n        script.dispatchEvent(event);\n    };\n\n    if (isSetup) {\n        await context.handleEvent({ currentTarget: null, script });\n        notifyEditor();\n        return;\n    }\n\n    const selector = script.getAttribute(\"target\");\n\n    if (selector) {\n        target =\n            document.getElementById(selector) ||\n            document.querySelector(selector);\n        if (!target) throw new Error(`Unknown target ${selector}`);\n    } else {\n        target = document.createElement(`${type}-editor`);\n        target.style.display = \"block\";\n        script.after(target);\n    }\n\n    if (!target.id) target.id = getID(type);\n    if (!target.hasAttribute(\"exec-id\")) target.setAttribute(\"exec-id\", 0);\n    if (!target.hasAttribute(\"root\")) target.setAttribute(\"root\", target.id);\n\n    // @see https://github.com/JeffersGlass/mkdocs-pyscript/blob/main/mkdocs_pyscript/js/makeblocks.js\n    const [boxDiv, outDiv, runButton] = makeBoxDiv(context, type);\n    boxDiv.dataset.env = script.hasAttribute(\"env\") ? env : interpreter;\n\n    const inputChild = boxDiv.querySelector(`.${type}-editor-input > div`);\n    const parent = inputChild.attachShadow({ mode: \"open\" });\n    // avoid inheriting styles from the outer component\n    parent.innerHTML = `<style> :host { all: initial; }</style>`;\n\n    target.appendChild(boxDiv);\n\n    const doc = dedent(script.textContent).trim();\n\n    // preserve user indentation, if any\n    const indentation = /^([ \\t]+)/m.test(doc) ? RegExp.$1 : \"    \";\n\n    const listener = () => runButton.click();\n    const editor = new EditorView({\n        extensions: [\n            indentUnit.of(indentation),\n            new Compartment().of(python()),\n            keymap.of([\n                ...defaultKeymap,\n                { key: \"Ctrl-Enter\", run: listener, preventDefault: true },\n                { key: \"Cmd-Enter\", run: listener, preventDefault: true },\n                { key: \"Shift-Enter\", run: listener, preventDefault: true },\n                // @see https://codemirror.net/examples/tab/\n                indentWithTab,\n            ]),\n            basicSetup,\n        ],\n        foldGutter: true,\n        gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\n        parent,\n        doc,\n    });\n\n    editors.set(script, editor);\n    editor.focus();\n    notifyEditor();\n};\n\n// avoid too greedy MutationObserver operations at distance\nlet timeout = 0;\n\n// avoid delayed initialization\nlet queue = Promise.resolve();\n\n// reset interval value then check for new scripts\nconst resetTimeout = () => {\n    timeout = 0;\n    pyEditor();\n};\n\n// triggered both ASAP on the living DOM and via MutationObserver later\nconst pyEditor = () => {\n    if (timeout) return;\n    timeout = setTimeout(resetTimeout, 250);\n    for (const [type, interpreter] of TYPES) {\n        const selector = `script[type=\"${type}-editor\"]`;\n        for (const script of document.querySelectorAll(selector)) {\n            // avoid any further bootstrap by changing the type as active\n            script.type += \"-active\";\n            // don't await in here or multiple calls might happen\n            // while the first script is being initialized\n            queue = queue.then(() => init(script, type, interpreter));\n        }\n    }\n    return queue;\n};\n\nnew MutationObserver(pyEditor).observe(document, {\n    childList: true,\n    subtree: true,\n});\n\n// try to check the current document ASAP\nexport default pyEditor();\n"],"names":["RUN_BUTTON","id","getID","type","envs","Map","configs","editors","WeakMap","hooks","worker","codeBeforeRun","stdlib","onReady","runAsync","io","sync","stdout","buffered","write","stderr","writeErr","revoke","validate","config","result","getRelatedScript","target","editor","closest","parentNode","previousElementSibling","async","execute","currentTarget","script","env","pySrc","outDiv","this","hasRunButton","classList","add","innerHTML","has","srcLink","URL","createObjectURL","Blob","details","interpreter","serviceWorker","configURL","relative_url","endsWith","parse","toml","Promise","all","import","fetch","then","r","ok","text","json","JSON","version","offline_interpreter","error","notify","xworker","XWorker","call","Hook","TYPES","keys","defineProperties","value","promise","resolve","withResolvers","set","revokeObjectURL","get","onerror","insertAdjacentHTML","message","console","enable","remove","parentElement","dispatchEvent","Event","bubbles","cancelable","str","innerText","log","replaceScript","terminate","clone","cloneNode","content","state","doc","toString","textContent","delete","nextElementSibling","replaceWith","makeEditorDiv","handler","editorDiv","document","createElement","className","setAttribute","runButton","addEventListener","event","contains","confirm","getAttribute","key","sel","querySelectorAll","blur","handleEvent","makeRunButton","editorShadowContainer","stopPropagation","append","makeBoxDiv","boxDiv","makeOutDiv","querySelector","init","basicSetup","EditorView","Compartment","python","indentUnit","keymap","defaultKeymap","indentWithTab","codemirror","core","language","view","commands","isSetup","hasAttribute","hasConfig","onmessage","SyntaxError","source","src","b","context","callback","code","insert","update","changes","from","to","length","process","asRunButtonAction","listener","wasSetup","wasSource","restore","notifyEditor","selector","getElementById","Error","style","display","after","dataset","parent","attachShadow","mode","appendChild","dedent","trim","indentation","test","RegExp","$1","click","extensions","of","run","preventDefault","foldGutter","gutters","focus","timeout","queue","resetTimeout","pyEditor","setTimeout","MutationObserver","observe","childList","subtree","pyEditor$1"],"mappings":"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"}