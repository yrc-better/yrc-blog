{"version":3,"file":"py-game-C1AFmXwj.js","sources":["../node_modules/polyscript/esm/exports.js","../src/plugins/py-game.js"],"sourcesContent":["// this file simply exports enough stuff to allow\n// 3rd party libraries, including PyScript, to work\nimport { buffered } from './interpreter/_io.js';\nimport { createProgress } from './interpreter/_utils.js';\nimport { loadProgress as lP } from './interpreter/_python.js';\nimport { registry } from './interpreters.js';\n\nconst loadProgress = (type, ...rest) => lP(registry.get(type), ...rest);\n\nexport { buffered, createProgress, loadProgress };\nexport * from './index.js';\nexport * from './script-handler.js';\nexport * from './utils.js';\n","import {\n    dedent,\n    define,\n    createProgress,\n    loadProgress,\n} from \"polyscript/exports\";\n\nimport { stdlib } from \"../core.js\";\nimport { configDetails } from \"../config.js\";\nimport { getText } from \"../fetch.js\";\n\nconst progress = createProgress(\"py-game\");\n\nconst inputPatch = `\nimport builtins\ndef input(prompt=\"\"):\n    import js\n    return js.prompt(prompt)\n\nbuiltins.input = input\ndel builtins\ndel input\n`;\n\nlet toBeWarned = true;\n\nconst hooks = {\n    main: {\n        onReady: async (wrap, script) => {\n            if (toBeWarned) {\n                toBeWarned = false;\n                console.warn(\"⚠️ EXPERIMENTAL `py-game` FEATURE\");\n            }\n\n            let config = {};\n            if (script.hasAttribute(\"config\")) {\n                const value = script.getAttribute(\"config\");\n                const { json, toml, text, url } = await configDetails(value);\n                if (json) config = JSON.parse(text);\n                else if (toml) {\n                    const { parse } = await import(\n                        /* webpackIgnore: true */ \"../3rd-party/toml.js\"\n                    );\n                    config = parse(text);\n                }\n                if (config.packages) {\n                    await wrap.interpreter.loadPackage(\"micropip\");\n                    const micropip = wrap.interpreter.pyimport(\"micropip\");\n                    await micropip.install(config.packages, {\n                        keep_going: true,\n                    });\n                    micropip.destroy();\n                }\n                await loadProgress(\n                    \"py-game\",\n                    progress,\n                    wrap.interpreter,\n                    config,\n                    url ? new URL(url, location.href).href : location.href,\n                );\n            }\n\n            wrap.interpreter.registerJsModule(\"_pyscript\", {\n                PyWorker() {\n                    throw new Error(\n                        \"Unable to use PyWorker in py-game scripts\",\n                    );\n                },\n                js_import: (...urls) =>\n                    Promise.all(urls.map((url) => import(url))),\n                get target() {\n                    return script.id;\n                },\n            });\n\n            await wrap.interpreter.runPythonAsync(stdlib);\n            wrap.interpreter.runPython(inputPatch);\n\n            let code = dedent(script.textContent);\n            if (script.src) code = await fetch(script.src).then(getText);\n\n            const target = script.getAttribute(\"target\") || \"canvas\";\n            const canvas = document.getElementById(target);\n            wrap.interpreter.canvas.setCanvas2D(canvas);\n\n            // allow 3rd party to hook themselves right before\n            // the code gets executed\n            const event = new CustomEvent(\"py-game\", {\n                bubbles: true,\n                cancelable: true,\n                detail: {\n                    canvas,\n                    code,\n                    config,\n                    wrap,\n                },\n            });\n            script.dispatchEvent(event);\n            // run only if the default was not prevented\n            if (!event.defaultPrevented)\n                await wrap.interpreter.runPythonAsync(code);\n        },\n    },\n};\n\ndefine(\"py-game\", {\n    config: { packages: [\"pygame-ce\"] },\n    configURL: new URL(\"./config.txt\", location.href).href,\n    interpreter: \"pyodide\",\n    env: \"py-game\",\n    hooks,\n});\n"],"names":["progress","createProgress","toBeWarned","hooks","main","onReady","async","wrap","script","console","warn","config","hasAttribute","value","getAttribute","json","toml","text","url","configDetails","JSON","parse","import","packages","interpreter","loadPackage","micropip","pyimport","install","keep_going","destroy","type","rest","lP","registry","get","loadProgress","URL","location","href","registerJsModule","PyWorker","Error","js_import","urls","Promise","all","map","target","id","runPythonAsync","stdlib","runPython","code","dedent","textContent","src","fetch","then","getText","canvas","document","getElementById","setCanvas2D","event","CustomEvent","bubbles","cancelable","detail","dispatchEvent","defaultPrevented","define","configURL","env"],"mappings":"wFAOA,MCIMA,EAAWC,EAAe,WAahC,IAAIC,GAAa,EAEjB,MAAMC,EAAQ,CACVC,KAAM,CACFC,QAASC,MAAOC,EAAMC,KACdN,IACAA,GAAa,EACbO,QAAQC,KAAK,sCAGjB,IAAIC,EAAS,CAAA,EACb,GAAIH,EAAOI,aAAa,UAAW,CAC/B,MAAMC,EAAQL,EAAOM,aAAa,WAC5BC,KAAEA,EAAIC,KAAEA,EAAIC,KAAEA,EAAIC,IAAEA,SAAcC,EAAcN,GACtD,GAAIE,EAAMJ,EAASS,KAAKC,MAAMJ,QACzB,GAAID,EAAM,CACX,MAAMK,MAAEA,SAAgBC,OACM,sBAE9BX,EAASU,EAAMJ,EACnB,CACA,GAAIN,EAAOY,SAAU,OACXhB,EAAKiB,YAAYC,YAAY,YACnC,MAAMC,EAAWnB,EAAKiB,YAAYG,SAAS,kBACrCD,EAASE,QAAQjB,EAAOY,SAAU,CACpCM,YAAY,IAEhBH,EAASI,SACb,MD7CK,EAACC,KAASC,IAASC,EAAGC,EAASC,IAAIJ,MAAUC,GC8C5CI,CACF,UACApC,EACAO,EAAKiB,YACLb,EACAO,EAAM,IAAImB,IAAInB,EAAKoB,SAASC,MAAMA,KAAOD,SAASC,KAE1D,CAEAhC,EAAKiB,YAAYgB,iBAAiB,YAAa,CAC3C,QAAAC,GACI,MAAM,IAAIC,MACN,4CAER,EACAC,UAAW,IAAIC,IACXC,QAAQC,IAAIF,EAAKG,IAAK7B,GAAQI,OAAOJ,KACzC,UAAI8B,GACA,OAAOxC,EAAOyC,EAClB,UAGE1C,EAAKiB,YAAY0B,eAAeC,GACtC5C,EAAKiB,YAAY4B,UA/DV,8IAiEP,IAAIC,EAAOC,EAAO9C,EAAO+C,aACrB/C,EAAOgD,MAAKH,QAAaI,MAAMjD,EAAOgD,KAAKE,KAAKC,IAEpD,MAAMX,EAASxC,EAAOM,aAAa,WAAa,SAC1C8C,EAASC,SAASC,eAAed,GACvCzC,EAAKiB,YAAYoC,OAAOG,YAAYH,GAIpC,MAAMI,EAAQ,IAAIC,YAAY,UAAW,CACrCC,SAAS,EACTC,YAAY,EACZC,OAAQ,CACJR,SACAP,OACA1C,SACAJ,UAGRC,EAAO6D,cAAcL,GAEhBA,EAAMM,wBACD/D,EAAKiB,YAAY0B,eAAeG,MAKtDkB,EAAO,UAAW,CACd5D,OAAQ,CAAEY,SAAU,CAAC,cACrBiD,UAAW,IAAInC,IAAI,eAAgBC,SAASC,MAAMA,KAClDf,YAAa,UACbiD,IAAK,UACLtE","x_google_ignoreList":[0]}